name: Deploy Enigma Casino

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-backend:
    runs-on: ubuntu-latest
    outputs:
      zip-name: enigma-backend.zip
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Publish backend
        working-directory: backend/the-enigma-casino-server
        run: |
          dotnet restore
          dotnet publish -c Release -o ../../deploy/backend/publish

      - name: Crear ZIP para CodeDeploy
        run: |
          zip -r enigma-backend.zip appspec.yml install.sh start.sh stop.sh publish/

      - name: Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Subir artefacto a S3
        run: |
          aws s3 cp enigma-backend.zip s3://enigma-deployments/enigma-backend.zip

  deploy-backend:
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
      - name: Lanzar despliegue CodeDeploy (backend)
        run: |
          aws deploy create-deployment \
            --application-name enigma-backend \
            --deployment-group-name BackendGroup \
            --s3-location bucket=enigma-deployments,key=enigma-backend.zip,bundleType=zip \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --description "Despliegue backend desde GitHub"

  build-frontend:
    runs-on: ubuntu-latest
    outputs:
      zip-name1: enigma-frontend1.zip
      zip-name2: enigma-frontend2.zip
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Instalar Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Generar .env.production para frontend 1
        working-directory: frontend/the-enigma-casino-client
        run: |
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" > .env.production
          echo "VITE_WS_BASE_URL=${{ secrets.VITE_WS_BASE_URL }}" >> .env.production
          echo "VITE_STRIPE_PUBLIC_KEY=${{ secrets.VITE_STRIPE_PUBLIC_KEY }}" >> .env.production
          echo "VITE_DEPLOY_ENV=aws-frontend-1" >> .env.production

      - name: Build frontend 1
        run: |
          npm ci
          npm run build

      - name: Preparar ZIP Frontend 1
        run: |
          zip -r enigma-frontend1.zip appspec.yml install.sh start.sh stop.sh build/

      - name: Guardar build y regenerar .env.production para frontend 2
        working-directory: frontend/the-enigma-casino-client
        run: |
          mv build build1
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" > .env.production
          echo "VITE_WS_BASE_URL=${{ secrets.VITE_WS_BASE_URL }}" >> .env.production
          echo "VITE_STRIPE_PUBLIC_KEY=${{ secrets.VITE_STRIPE_PUBLIC_KEY }}" >> .env.production
          echo "VITE_DEPLOY_ENV=aws-frontend-2" >> .env.production

      - name: Build frontend 2
        run: |
          npm run build

      - name: Preparar ZIP Frontend 2
        run: |
          zip -r enigma-frontend2.zip appspec.yml install.sh start.sh stop.sh build/

      - name: Subir ZIP Frontend 1 a S3
        run: |
          mv build1 build
          aws s3 cp enigma-frontend1.zip s3://enigma-deployments/enigma-frontend1.zip

      - name: Subir ZIP Frontend 2 a S3
        run: |
          aws s3 cp enigma-frontend2.zip s3://enigma-deployments/enigma-frontend2.zip

  deploy-frontend1:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Lanzar despliegue CodeDeploy (frontend 1)
        run: |
          aws deploy create-deployment \
            --application-name enigma-frontend-1 \
            --deployment-group-name FrontendGroup1 \
            --s3-location bucket=enigma-deployments,key=enigma-frontend1.zip,bundleType=zip \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --description "Despliegue frontend 1"

  deploy-frontend2:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Lanzar despliegue CodeDeploy (frontend 2)
        run: |
          aws deploy create-deployment \
            --application-name enigma-frontend-2 \
            --deployment-group-name FrontendGroup2 \
            --s3-location bucket=enigma-deployments,key=enigma-frontend2.zip,bundleType=zip \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --description "Despliegue frontend 2"
