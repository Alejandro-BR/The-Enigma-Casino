name: Deploy Enigma Casino

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del c√≥digo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      ########################################
      # üîπ FRONTEND 1
      ########################################
      - name: Generar .env.production para Frontend 1
        working-directory: frontend/the-enigma-casino-client
        run: |
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" > .env.production
          echo "VITE_WS_BASE_URL=${{ secrets.VITE_WS_BASE_URL }}" >> .env.production
          echo "VITE_STRIPE_PUBLIC_KEY=${{ secrets.VITE_STRIPE_PUBLIC_KEY }}" >> .env.production
          echo "VITE_DEPLOY_ENV=aws-frontend-1" >> .env.production

      - name: Build Frontend 1
        working-directory: frontend/the-enigma-casino-client
        run: |
          npm ci
          npm run build

      - name: Empaquetar frontend 1 con appspec.yml y scripts
        run: |
          mkdir -p deploy/frontend1/build
          cp -r frontend/the-enigma-casino-client/dist/* deploy/frontend1/build/
          cp deploy/frontend/appspec.yml deploy/frontend1/
          cp -r deploy/frontend/scripts deploy/frontend1/scripts
          cp -r frontend/the-enigma-casino-client/scripts deploy/frontend1/
          cd deploy/frontend1
          zip -r ../../frontend1-deploy.zip ./*

      ########################################
      # üîπ FRONTEND 2
      ########################################
      - name: Generar .env.production para Frontend 2
        working-directory: frontend/the-enigma-casino-client
        run: |
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" > .env.production
          echo "VITE_WS_BASE_URL=${{ secrets.VITE_WS_BASE_URL }}" >> .env.production
          echo "VITE_STRIPE_PUBLIC_KEY=${{ secrets.VITE_STRIPE_PUBLIC_KEY }}" >> .env.production
          echo "VITE_DEPLOY_ENV=aws-frontend-2" >> .env.production

      - name: Build Frontend 2
        working-directory: frontend/the-enigma-casino-client
        run: npm run build

      - name: Empaquetar frontend 2 con appspec.yml y scripts
        run: |
          mkdir -p deploy/frontend2/build
          cp -r frontend/the-enigma-casino-client/dist/* deploy/frontend2/build/
          cp deploy/frontend/appspec.yml deploy/frontend2/
          cp -r deploy/frontend/scripts deploy/frontend2/scripts
          cp -r frontend/the-enigma-casino-client/scripts deploy/frontend2/
          cd deploy/frontend2
          zip -r ../../frontend2-deploy.zip ./*

      ########################################
      # üîπ BACKEND
      ########################################
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restaurar dependencias backend
        working-directory: backend/the-enigma-casino-server
        run: dotnet restore

      - name: Compilar y publicar backend
        working-directory: backend/the-enigma-casino-server
        run: dotnet publish -c Release -o ../../deploy/backend/publish

      - name: Empaquetar backend con appspec.yml y scripts
        run: |
          cp backend/the-enigma-casino-server/appspec.yml deploy/backend/
          cp -r backend/the-enigma-casino-server/scripts deploy/backend/
          cd deploy/backend
          zip -r ../../backend-deploy.zip ./*

      ########################################
      # üîê CONFIGURAR AWS
      ########################################
      - name: Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      ########################################
      # üöÄ SUBIR ZIPs A S3
      ########################################
      - name: Subir artefactos a S3
        run: |
          aws s3 cp frontend1-deploy.zip s3://${{ secrets.S3_BUCKET }}/frontend1-deploy.zip
          aws s3 cp frontend2-deploy.zip s3://${{ secrets.S3_BUCKET }}/frontend2-deploy.zip
          aws s3 cp backend-deploy.zip s3://${{ secrets.S3_BUCKET }}/backend-deploy.zip

      ########################################
      # üöÄ CREAR DEPLOYMENTS EN CODEDEPLOY
      ########################################
      - name: Desplegar backend
        run: |
          aws deploy create-deployment \
            --application-name EnigmaBackendApp \
            --deployment-group-name EnigmaBackendGroup \
            --s3-location bucket=${{ secrets.S3_BUCKET }},bundleType=zip,key=backend-deploy.zip \
            --file-exists-behavior OVERWRITE \
            --deployment-config-name CodeDeployDefault.AllAtOnce

      - name: Desplegar frontend 1
        run: |
          aws deploy create-deployment \
            --application-name EnigmaFrontendApp1 \
            --deployment-group-name EnigmaFrontendGroup1 \
            --s3-location bucket=${{ secrets.S3_BUCKET }},bundleType=zip,key=frontend1-deploy.zip \
            --file-exists-behavior OVERWRITE \
            --deployment-config-name CodeDeployDefault.AllAtOnce

      - name: Desplegar frontend 2
        run: |
          aws deploy create-deployment \
            --application-name EnigmaFrontendApp2 \
            --deployment-group-name EnigmaFrontendGroup2 \
            --s3-location bucket=${{ secrets.S3_BUCKET }},bundleType=zip,key=frontend2-deploy.zip \
            --file-exists-behavior OVERWRITE \
            --deployment-config-name CodeDeployDefault.AllAtOnce
